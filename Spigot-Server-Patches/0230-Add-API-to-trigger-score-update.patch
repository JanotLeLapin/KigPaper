From bb5aae6829f6f17f0100edc8d27f9efee25b8b4a Mon Sep 17 00:00:00 2001
From: RoccoDev <hey@rocco.dev>
Date: Sun, 13 Mar 2022 18:17:21 +0100
Subject: [PATCH] Add API to trigger score update


diff --git a/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftScoreboardManager.java b/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftScoreboardManager.java
index fbea5db29..ab459c438 100644
--- a/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftScoreboardManager.java
+++ b/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftScoreboardManager.java
@@ -1,13 +1,8 @@
 package org.bukkit.craftbukkit.scoreboard;
 
-import java.util.ArrayList;
-import java.util.Collection;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
+import java.util.*;
 
+import com.google.common.base.Preconditions;
 import net.minecraft.server.EntityPlayer;
 import net.minecraft.server.IScoreboardCriteria;
 import net.minecraft.server.MinecraftServer;
@@ -23,6 +18,7 @@ import org.apache.commons.lang.Validate;
 import org.bukkit.craftbukkit.entity.CraftPlayer;
 import org.bukkit.craftbukkit.util.WeakCollection;
 import org.bukkit.entity.Player;
+import org.bukkit.scoreboard.Criterias;
 import org.bukkit.scoreboard.ScoreboardManager;
 
 public final class CraftScoreboardManager implements ScoreboardManager {
@@ -116,4 +112,25 @@ public final class CraftScoreboardManager implements ScoreboardManager {
             score.updateForList((List) of);
         }
     }
+
+    // KigPaper start
+    @Override
+    public void updateScoresFor(String criteria, Collection<String> scoreboardEntries, Collection<Player> receivers) {
+        CraftCriteria craftCriteria = CraftCriteria.getFromBukkit(criteria);
+        List<EntityPlayer> players;
+        if (receivers.isEmpty()) {
+            players = Collections.emptyList();
+        } else if (receivers.size() == 1) {
+            players = Collections.singletonList(((CraftPlayer) receivers.iterator().next()).getHandle());
+        } else {
+            players = new ArrayList<>(receivers.size());
+            for (Player receiver : receivers) {
+                players.add(((CraftPlayer) receiver).getHandle());
+            }
+        }
+        for (String entry : scoreboardEntries) {
+            updateAllScoresForList(craftCriteria.criteria, entry, players);
+        }
+    }
+    // KigPaper end
 }
-- 
2.34.1

